# Chat GPT properties
gpt.chat.model=gpt-3.5-turbo-0613
gpt.chat.temperature=1.0
gpt.chat.presence.penalty=1.0
gpt.chat.completion.maxtokens=1000
gpt.chat.api.url=https://api.openai.com/v1/chat/completions
gpt.chat.sendrequest.retryattempts=3
gpt.chat.sendrequest.waitforretry.seconds=4
gpt.chat.characters.amount.max=14000
gpt.chat.characters.not.enough.context.limit=The request has bigger size than current GPT model can process. Contact your administrator.

# Slack
slack.max.messages.from.history=1000
slack.wait.seconds.for.retry=2
slack.retry.attempts=3
slack.bot.name=GPT
slack.max.messages.to.remove=10000

#Jira
jira.project.url=https://andreypyatakha.atlassian.net
jira.browse.url=/browse
jira.api.base.url=https://andreypyatakha.atlassian.net/rest/api/2
jira.api.agile.base.url=https://andreypyatakha.atlassian.net/rest/agile/1.0
jira.api.resourse.issue=/issue
jira.api.resourse.search=/search
jira.api.resourse.issuetype=/issueType
jira.api.resource.users=/users
jira.api.resourse.users.search=/search
jira.api.agile.resource.board=/board
jira.api.agile.resource.sprint=/sprint
jira.api.agile.board.type.scrum=scrum
jira.api.projet.name=SIB
jira.api.issue.max.results=100
jira.terminal.status=Done

# GPT Functions descriptions
gpt.function.jira.get.issues.name=getJiraIssuesFunction
gpt.function.jira.get.issues.description=Get the list of all Jira issues of different types (Epic, Story, Task, Bug) from the configured Jira project in order to provide information about team members workload, current plan, due dates, issue description, summaries, total amount of issues, find the issues of the specific type, find the ID of the issue by its summary or description, calculate team workload

gpt.function.jira.create.issue.name=createJiraIssueFunction
gpt.function.jira.create.issue.description=The function creates Jira issue of the specified type (Epic, Story, Task, Bug), with the specific summary, description, due date, assignee.
gpt.function.jira.create.issue.attr.assignee.desc=The name of the team member that should be assigned to the current work item. In case name is not provided, we can leave it blank. This is an optional attribute.
gpt.function.jira.create.issue.attr.description.desc=Contains the detailed description of the task. It can be written in different formats. In case this is a story, we need to create description in user story format "as a user I want...". In case this is a bug, the description MUST have steps to reproduce, actual and expected behavior. This is a mandatory attribute. 
gpt.function.jira.create.issue.attr.issuetype.desc=Must have one of the specified values: Epic, Story, Task, Bug. No other values are allowed. By default it is "Task", in case nothing other is provided. This is a mandatory attribute.
gpt.function.jira.create.issue.attr.issuetype.epic=Epic
gpt.function.jira.create.issue.attr.issuetype.story=Story
gpt.function.jira.create.issue.attr.issuetype.task=Task
gpt.function.jira.create.issue.attr.issuetype.bug=Bug
gpt.function.jira.create.issue.attr.duedate.desc=Contains the due date of the work item telling what is the latest possible date when task should be done. In other words, sets the latest date when work item should be completed, implemented and moved to the done state. For example, user can use such due dates: "by end of the week", "by end of the month", "by end of the year", "by September 14th, 2023", "by September 14th", "should be implemented till March 12th", etc. And it is required that ChatGPT would recognize the referene to the due date and convert it to the following the format "yyyy-MM-dd".
gpt.function.jira.create.issue.attr.summary.format=yyyy-MM-dd
gpt.function.jira.create.issue.attr.summary.desc=Short description of work item. Should give clear understanding of what this work item is about. This is a mandatory attribute. 

gpt.function.gmail.send.email.name=sendEmailFunction
gpt.function.gmail.send.email.description=The function sends email with the configured subject, and content to the specified email address. 
gpt.function.gmail.send.email.attr.addressee.email.desc=The email address of the addressee. The email address where we want to send email to. The email should meet the requirements of RFC 5322 standard.
gpt.function.gmail.send.email.attr.addressee.name.desc=The first name and last name of the addressee. For example: "send email to John Smith". The addressee name from this field will be used to find an email. 
gpt.function.gmail.send.email.attr.content.desc=The content of the email. Should be inserted as a body of the email.
gpt.function.gmail.send.email.attr.subject.desc=The subject of the email.

gpt.function.jira.avg.velocity.name=getAvgVelocityFunction
gpt.function.jira.avg.velocity.description=The function calculates average velocity based on the previous sprints. User can tell us how much sprints we need to take into consideration during the calculation of average velocity.
gpt.function.jira.avg.velocity.attr.amount.sprints.desc=The attribute contains Integer value of how much previous sprints should be taken into consideration when calculating average velocity. In case we need to calculate average velocity based on two last sprints - user should specify that average velocity should be calculated based on the two previous sprints. Or based on other amount of sprints. The default value is 3.


